import tkinter as tk
from tkinter import ttk
from static.constants import APP_NAME, VERSION, BG_COLOR, FONT_MAIN
from static.mappings import DATASET_NAMES
from gui_handlers import run_algorithm, run_all_modes, log, MODE_NAMES

# --- GUI ---
root = tk.Tk()
root.title(f"{APP_NAME} {VERSION}")
root.configure(bg=BG_COLOR)

# --- –í–µ—Ä—Ö–Ω—è –ø–∞–Ω–µ–ª—å ---
frame_top = ttk.Frame(root, padding=10)
frame_top.grid(row=0, column=0, columnspan=2, sticky="ew")

ttk.Label(frame_top, text="–ï–Ω–µ—Ä–≥–æ—Å–∏—Å—Ç–µ–º–∞:", font=FONT_MAIN).grid(row=0, column=0, padx=5, pady=5)
dataset_var = tk.StringVar(value="s1")
ttk.Combobox(frame_top, textvariable=dataset_var, values=list(DATASET_NAMES.keys()), width=25).grid(row=0, column=1, padx=5, pady=5)

ttk.Label(frame_top, text="–ï—Ç–∞–ø –∞–Ω–∞–ª—ñ–∑—É:", font=FONT_MAIN).grid(row=0, column=2, padx=5, pady=5)
mode_var = tk.StringVar(value="features")
# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑—Ä–æ–∑—É–º—ñ–ª—ñ –Ω–∞–∑–≤–∏ —Ä–µ–∂–∏–º—ñ–≤
ttk.Combobox(frame_top, textvariable=mode_var, values=list(MODE_NAMES.keys()), width=30).grid(row=0, column=3, padx=5, pady=5)

ttk.Label(frame_top, text="–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–∫–æ–ª—ñ–Ω—å:", font=FONT_MAIN).grid(row=0, column=4, padx=5, pady=5)
gen_var = tk.StringVar(value="5")
ttk.Entry(frame_top, textvariable=gen_var, width=10).grid(row=0, column=5, padx=5, pady=5)

# --- –ö–Ω–æ–ø–∫–∏ ---
frame_buttons = ttk.Frame(root, padding=10)
frame_buttons.grid(row=1, column=0, columnspan=2, sticky="ew")

btn_width = 25
ttk.Button(frame_buttons, text="‚ñ∂ –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –∞–Ω–∞–ª—ñ–∑",
           command=lambda: run_algorithm(root, output, dataset_var, mode_var, gen_var),
           width=btn_width).grid(row=0, column=0, padx=5)

ttk.Button(frame_buttons, text="‚è© –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –≤—Å—ñ –µ—Ç–∞–ø–∏",
           command=lambda: run_all_modes(root, output, dataset_var, gen_var),
           width=btn_width).grid(row=0, column=1, padx=5)

# --- –û—Å–Ω–æ–≤–Ω—ñ —Ñ—Ä–µ–π–º–∏ ---
frame_left = ttk.Frame(root, padding=10)
frame_left.grid(row=2, column=0, sticky="n")

frame_right = ttk.Frame(root, padding=10)
frame_right.grid(row=2, column=1, sticky="n")

root.frame_right = frame_right  # –¥–ª—è –º–æ–∂–ª–∏–≤–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è

# --- –õ–æ–≥ ---
output = tk.Text(frame_left, width=80, height=15, font=FONT_MAIN)
output.grid(row=0, column=0, padx=10, pady=10)

# --- –¢–∞–±–ª–∏—Ü—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ ---
columns = ("dataset", "mode", "mae", "rmse", "extra")
results_table = ttk.Treeview(frame_left, columns=columns, show="headings", height=8)

results_table.heading("dataset", text="–ï–Ω–µ—Ä–≥–æ—Å–∏—Å—Ç–µ–º–∞")
results_table.heading("mode", text="–ï—Ç–∞–ø –∞–Ω–∞–ª—ñ–∑—É")
results_table.heading("mae", text="MAE")
results_table.heading("rmse", text="RMSE")
results_table.heading("extra", text="–î–æ–¥–∞—Ç–∫–æ–≤–æ")

results_table.column("dataset", width=120, anchor="center")
results_table.column("mode", width=200, anchor="center")
results_table.column("mae", width=80, anchor="center")
results_table.column("rmse", width=80, anchor="center")
results_table.column("extra", width=400, anchor="w")

results_table.grid(row=1, column=0, padx=10, pady=10)

# –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∏–π —Å–∫—Ä–æ–ª–±–∞—Ä
scroll_x = tk.Scrollbar(frame_left, orient="horizontal", command=results_table.xview)
results_table.configure(xscrollcommand=scroll_x.set)
scroll_x.grid(row=2, column=0, sticky="ew")

# –†–æ–±–∏–º–æ —Ç–∞–±–ª–∏—Ü—é –¥–æ—Å—Ç—É–ø–Ω–æ—é —É gui_handlers
root.results_table = results_table

# –°—Ç–∞—Ä—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
log(root, output, "üîå –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –µ–Ω–µ—Ä–≥–æ—Å–∏—Å—Ç–µ–º–∏ –≥–æ—Ç–æ–≤–∞ –¥–æ —Ä–æ–±–æ—Ç–∏", "info")

root.mainloop()
