import tkinter as tk                          # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –±–∞–∑–æ–≤–∏–π –º–æ–¥—É–ª—å Tkinter —ñ –¥–∞—î–º–æ –π–æ–º—É –ø—Å–µ–≤–¥–æ–Ω—ñ–º tk
from tkinter import ttk                       # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ ttk (—Å—Ç–∏–ª—ñ–∑–æ–≤–∞–Ω—ñ –≤—ñ–¥–∂–µ—Ç–∏ Tkinter)
from static.constants import APP_NAME, VERSION, BG_COLOR, FONT_MAIN  # –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏ –¥–æ–¥–∞—Ç–∫–∞ (–Ω–∞–∑–≤–∞, –≤–µ—Ä—Å—ñ—è, –∫–æ–ª—å–æ—Ä–∏, —à—Ä–∏—Ñ—Ç)
from static.mappings import DATASET_NAMES     # –ú–∞–ø—ñ–Ω–≥ –Ω–∞–∑–≤ –¥–∞—Ç–∞—Å–µ—Ç—ñ–≤ (–∫–ª—é—á—ñ –¥–ª—è –∫–æ–º–±–æ–±–æ–∫—Å—É)
from gui_handlers import (                    # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—ó –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ GUI
    run_algorithm, run_all_modes, log, MODE_NAMES,
    save_table_to_csv, clear_log_and_table, set_running
)

# --- –ì–æ–ª–æ–≤–Ω–µ –≤—ñ–∫–Ω–æ ---
root = tk.Tk()                                 # –°—Ç–≤–æ—Ä—é—î–º–æ –≥–æ–ª–æ–≤–Ω–µ –≤—ñ–∫–Ω–æ –¥–æ–¥–∞—Ç–∫–∞
root.title(f"{APP_NAME} {VERSION}")            # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤—ñ–∫–Ω–∞ –∑ –Ω–∞–∑–≤–æ—é —Ç–∞ –≤–µ—Ä—Å—ñ—î—é
root.configure(bg="#f5f5f5")                   # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å–≤—ñ—Ç–ª–∏–π —Ñ–æ–Ω –¥–ª—è –≤—Å—å–æ–≥–æ –≤—ñ–∫–Ω–∞

# --- –°—Ç–∏–ª—å ---
style = ttk.Style()                            # –°—Ç–≤–æ—Ä—é—î–º–æ —Å—Ç–∏–ª—å ttk
style.theme_use("clam")                        # –í–º–∏–∫–∞—î–º–æ —Ç–µ–º—É "clam" –¥–ª—è —Å—É—á–∞—Å–Ω–æ–≥–æ –≤–∏–≥–ª—è–¥—É

# –ó–∞–≥–∞–ª—å–Ω–∏–π —Å—Ç–∏–ª—å
style.configure("TLabel", font=("Segoe UI", 10), background="#f5f5f5")  # –°—Ç–∏–ª—å –¥–ª—è —É—Å—ñ—Ö Label: —à—Ä–∏—Ñ—Ç + —Ñ–æ–Ω
style.configure("TButton", font=("Segoe UI", 10, "bold"), padding=6)    # –°—Ç–∏–ª—å –¥–ª—è –∫–Ω–æ–ø–æ–∫: –∂–∏—Ä–Ω–∏–π —à—Ä–∏—Ñ—Ç + –ø–∞–¥—ñ–Ω–≥
style.configure("Treeview.Heading", font=("Segoe UI", 10, "bold"))      # –°—Ç–∏–ª—å –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤ —Ç–∞–±–ª–∏—Ü—ñ: –∂–∏—Ä–Ω–∏–π —à—Ä–∏—Ñ—Ç
style.configure("Treeview", rowheight=25, font=("Consolas", 10))        # –°—Ç–∏–ª—å —Ä—è–¥–∫—ñ–≤ —Ç–∞–±–ª–∏—Ü—ñ: –≤–∏—Å–æ—Ç–∞ + –º–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω–∏–π —à—Ä–∏—Ñ—Ç
style.map("Treeview", background=[("selected", "#cce5ff")])             # –ö–æ–ª—ñ—Ä –≤–∏–¥—ñ–ª–µ–Ω–æ–≥–æ —Ä—è–¥–∫–∞ —É —Ç–∞–±–ª–∏—Ü—ñ

# --- –°—Ç–∞—Ç—É—Å-–±–∞—Ä ---
root.status_var = tk.StringVar(value="–ì–æ—Ç–æ–≤–æ") # –ó–º—ñ–Ω–Ω–∞ —Å—Ç–∞–Ω—É (—Ä—è–¥–æ–∫), –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º "–ì–æ—Ç–æ–≤–æ"
status_bar = ttk.Label(                        # –°—Ç–≤–æ—Ä—é—î–º–æ —Å—Ç–∞—Ç—É—Å-–±–∞—Ä —è–∫ Label —ñ–∑ –ø—Ä–∏–≤'—è–∑–∫–æ—é –¥–æ –∑–º—ñ–Ω–Ω–æ—ó
    root, textvariable=root.status_var, anchor="w",
    background="#e9ecef", font=("Segoe UI", 9)
)
status_bar.grid(row=3, column=0, columnspan=2, sticky="ew")             # –†–æ–∑–º—ñ—â—É—î–º–æ –Ω–∏–∂—á–µ –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É (–ª–∏–ø–Ω–µ –ø–æ –æ—Å—ñ X)

# --- –í–µ—Ä—Ö–Ω—è –ø–∞–Ω–µ–ª—å ---
frame_top = ttk.Frame(root, padding=10)        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤–µ—Ä—Ö–Ω—ñ—Ö –∫–æ–Ω—Ç—Ä–æ–ª—ñ–≤ —ñ–∑ –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ–º –≤—ñ–¥—Å—Ç—É–ø–æ–º
frame_top.grid(row=0, column=0, columnspan=2, sticky="ew")              # –†–æ–∑–º—ñ—â—É—î–º–æ —É –≤–µ—Ä—Ö–Ω—å–æ–º—É —Ä—è–¥–∫—É, —Ä–æ–∑—Ç—è–≥—É—î–º–æ –ø–æ —à–∏—Ä–∏–Ω—ñ

ttk.Label(frame_top, text="–ï–Ω–µ—Ä–≥–æ—Å–∏—Å—Ç–µ–º–∞:", font=FONT_MAIN).grid(       # –ü—ñ–¥–ø–∏—Å –¥–ª—è –≤–∏–±–æ—Ä—É –¥–∞—Ç–∞—Å–µ—Ç—É
    row=0, column=0, padx=5, pady=5
)
dataset_var = tk.StringVar(value=next(iter(DATASET_NAMES.keys()), "s1"))# –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –≤–∏–±—Ä–∞–Ω–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç—É, –¥–µ—Ñ–æ–ª—Ç–Ω–æ –ø–µ—Ä—à–∏–π –∫–ª—é—á
ttk.Combobox(                                                           # –ö–æ–º–±–æ–±–æ–∫—Å –¥–ª—è –≤–∏–±–æ—Ä—É –¥–∞—Ç–∞—Å–µ—Ç—É
    frame_top, textvariable=dataset_var,
    values=list(DATASET_NAMES.keys()), width=25
).grid(row=0, column=1, padx=5, pady=5)

ttk.Label(frame_top, text="–ï—Ç–∞–ø –∞–Ω–∞–ª—ñ–∑—É:", font=FONT_MAIN).grid(        # –ü—ñ–¥–ø–∏—Å –¥–ª—è –≤–∏–±–æ—Ä—É –µ—Ç–∞–ø—É GA
    row=0, column=2, padx=5, pady=5
)
mode_var = tk.StringVar(value="features")                               # –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –≤–∏–±—Ä–∞–Ω–æ–≥–æ —Ä–µ–∂–∏–º—É (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º "features")
ttk.Combobox(                                                           # –ö–æ–º–±–æ–±–æ–∫—Å –¥–ª—è –≤–∏–±–æ—Ä—É —Ä–µ–∂–∏–º—É –∑–∞ —Ç–µ—Ö–Ω—ñ—á–Ω–∏–º–∏ –∫–ª—é—á–∞–º–∏
    frame_top, textvariable=mode_var,
    values=list(MODE_NAMES.keys()), width=30
).grid(row=0, column=3, padx=5, pady=5)

ttk.Label(frame_top, text="–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–∫–æ–ª—ñ–Ω—å:", font=FONT_MAIN).grid(  # –ü—ñ–¥–ø–∏—Å –¥–ª—è –ø–æ–ª—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–æ–∫–æ–ª—ñ–Ω—å
    row=0, column=4, padx=5, pady=5
)
gen_var = tk.StringVar(value="5")                                       # –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–æ–∫–æ–ª—ñ–Ω—å (—Ä—è–¥–æ–∫, –∫–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ –ø—ñ–∑–Ω—ñ—à–µ)
ttk.Entry(frame_top, textvariable=gen_var, width=10).grid(              # –ü–æ–ª–µ –≤–≤–æ–¥—É –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–æ–∫–æ–ª—ñ–Ω—å
    row=0, column=5, padx=5, pady=5
)

# --- –ö–Ω–æ–ø–∫–∏ ---
frame_buttons = ttk.Frame(root, padding=10)                             # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∫–µ—Ä—É–≤–∞–Ω–Ω—è
frame_buttons.grid(row=1, column=0, columnspan=2, sticky="ew")          # –†–æ–∑–º—ñ—â–µ–Ω–Ω—è –ø—ñ–¥ –≤–µ—Ä—Ö–Ω—å–æ—é –ø–∞–Ω–µ–ª–ª—é –ø–æ —à–∏—Ä–∏–Ω—ñ

btn_width = 24                                                          # –Ñ–¥–∏–Ω–∞ —à–∏—Ä–∏–Ω–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫ (–¥–ª—è –∞–∫—É—Ä–∞—Ç–Ω–æ–≥–æ –≤–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—è)
root.btn_run_one = ttk.Button(                                          # –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫—É –æ–¥–Ω–æ–≥–æ –µ—Ç–∞–ø—É
    frame_buttons, text="‚ñ∂ –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –µ—Ç–∞–ø",
    command=lambda: run_algorithm(root, output, dataset_var, mode_var, gen_var),
    width=btn_width
)
root.btn_run_one.grid(row=0, column=0, padx=5)                          # –†–æ–∑–º—ñ—â–µ–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –∑ –≤—ñ–¥—Å—Ç—É–ø–æ–º

root.btn_run_all = ttk.Button(                                          # –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫—É –≤—Å—ñ—Ö –µ—Ç–∞–ø—ñ–≤ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ
    frame_buttons, text="‚è© –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –≤—Å—ñ –µ—Ç–∞–ø–∏",
    command=lambda: run_all_modes(root, output, dataset_var, gen_var),
    width=btn_width
)
root.btn_run_all.grid(row=0, column=1, padx=5)

root.btn_save_csv = ttk.Button(                                         # –ö–Ω–æ–ø–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ —É CSV
    frame_buttons, text="üíæ –ó–±–µ—Ä–µ–≥—Ç–∏ —Ç–∞–±–ª–∏—Ü—é",
    command=lambda: save_table_to_csv(root, "results/summary.csv"),
    width=btn_width
)
root.btn_save_csv.grid(row=0, column=2, padx=5)

root.btn_clear = ttk.Button(                                            # –ö–Ω–æ–ø–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è –ª–æ–≥—É —ñ —Ç–∞–±–ª–∏—Ü—ñ
    frame_buttons, text="üßπ –û—á–∏—Å—Ç–∏—Ç–∏",
    command=lambda: clear_log_and_table(root),
    width=btn_width
)
root.btn_clear.grid(row=0, column=3, padx=5)

# --- –û—Å–Ω–æ–≤–Ω—ñ —Ñ—Ä–µ–π–º–∏ ---
frame_left = ttk.Frame(root, padding=10)                                # –õ—ñ–≤–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (–ª–æ–≥ + —Ç–∞–±–ª–∏—Ü—è)
frame_left.grid(row=2, column=0, sticky="n")                            # –†–æ–∑–º—ñ—â–µ–Ω–Ω—è –∑ –ø—Ä–∏–ª–∏–ø–∞–Ω–Ω—è–º –¥–æ –≤–µ—Ä—Ö–Ω—å–æ—ó —Å—Ç–æ—Ä–æ–Ω–∏

frame_right = ttk.Frame(root, padding=10)                               # –ü—Ä–∞–≤–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (—Ä–µ–∑–µ—Ä–≤ –Ω–∞ –º–∞–π–±—É—Ç–Ω—î)
frame_right.grid(row=2, column=1, sticky="n")                           # –†–æ–∑–º—ñ—â–µ–Ω–Ω—è –ø—Ä–∞–≤–æ—Ä—É—á
root.frame_right = frame_right                                          # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —É root –¥–ª—è –º–æ–∂–ª–∏–≤–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è

# --- –õ–æ–≥ ---
output = tk.Text(                                                       # –¢–µ–∫—Å—Ç–æ–≤–µ –ø–æ–ª–µ –¥–ª—è –ª–æ–≥—ñ–≤
    frame_left, width=88, height=18, font=FONT_MAIN, bg="#ffffff"
)
output.grid(row=0, column=0, padx=10, pady=10)                          # –†–æ–∑–º—ñ—â–µ–Ω–Ω—è –∑ –≤—ñ–¥—Å—Ç—É–ø–∞–º–∏
root.output = output                                                    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —É root (—â–æ–± –¥–æ—Å—Ç—É–ø–∏—Ç–∏—Å—å –∑ handler'—ñ–≤)

# --- –¢–∞–±–ª–∏—Ü—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ ---
columns = ("dataset", "mode", "mae", "rmse", "extra")                   # –í–∏–∑–Ω–∞—á–∞—î–º–æ —ñ–º–µ–Ω–∞ –∫–æ–ª–æ–Ω–æ–∫ —Ç–∞–±–ª–∏—Ü—ñ
results_table = ttk.Treeview(                                           # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é (Treeview) –∑ –≥–æ–ª–æ–≤–∞–º–∏ –∫–æ–ª–æ–Ω–æ–∫
    frame_left, columns=columns, show="headings", height=10
)

results_table.heading("dataset", text="–ï–Ω–µ—Ä–≥–æ—Å–∏—Å—Ç–µ–º–∞")                  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–æ–ª–æ–Ω–∫–∏ "dataset"
results_table.heading("mode", text="–ï—Ç–∞–ø –∞–Ω–∞–ª—ñ–∑—É")                      # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–æ–ª–æ–Ω–∫–∏ "mode"
results_table.heading("mae", text="MAE")                                # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–æ–ª–æ–Ω–∫–∏ "mae"
results_table.heading("rmse", text="RMSE")                              # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–æ–ª–æ–Ω–∫–∏ "rmse"
results_table.heading("extra", text="–î–æ–¥–∞—Ç–∫–æ–≤–æ")                        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–æ–ª–æ–Ω–∫–∏ "extra"

results_table.column("dataset", width=120, anchor="center")             # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —à–∏—Ä–∏–Ω–∏ —Ç–∞ –≤–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—è –∫–æ–ª–æ–Ω–∫–∏
results_table.column("mode", width=180, anchor="center")
results_table.column("mae", width=90, anchor="center")
results_table.column("rmse", width=90, anchor="center")
results_table.column("extra", width=420, anchor="w")

results_table.grid(row=1, column=0, padx=10, pady=10, sticky="ew")      # –†–æ–∑–º—ñ—â–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ, —Ä–æ–∑—Ç—è–≥—É—î–º–æ –ø–æ —à–∏—Ä–∏–Ω—ñ

# –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∏–π —Å–∫—Ä–æ–ª–±–∞—Ä
scroll_x = tk.Scrollbar(                                                # –°—Ç–≤–æ—Ä—é—î–º–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∏–π —Å–∫—Ä–æ–ª–±–∞—Ä
    frame_left, orient="horizontal", command=results_table.xview
)
results_table.configure(xscrollcommand=scroll_x.set)                    # –ü—Ä–∏–≤'—è–∑—É—î–º–æ —Å–∫—Ä–æ–ª–±–∞—Ä –¥–æ —Ç–∞–±–ª–∏—Ü—ñ
scroll_x.grid(row=2, column=0, sticky="ew")                             # –†–æ–∑–º—ñ—â—É—î–º–æ –ø—ñ–¥ —Ç–∞–±–ª–∏—Ü–µ—é, —Ä–æ–∑—Ç—è–≥—É—î–º–æ –ø–æ —à–∏—Ä–∏–Ω—ñ

# –†–æ–±–∏–º–æ —Ç–∞–±–ª–∏—Ü—é –¥–æ—Å—Ç—É–ø–Ω–æ—é —É gui_handlers
root.results_table = results_table                                      # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —É root, —â–æ–± –æ–±—Ä–æ–±–Ω–∏–∫–∏ –º–æ–≥–ª–∏ –≤—Å—Ç–∞–≤–ª—è—Ç–∏ —Ä—è–¥–∫–∏

# --- –°—Ç–∞—Ä—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ---
log(root, output,                                                       # –ü–æ—á–∞—Ç–∫–æ–≤–∏–π –ª–æ–≥, —è–∫–∏–π –ø–æ—è—Å–Ω—é—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –ø–æ—Ä—è–¥–æ–∫ –¥—ñ–π
    "üîå –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞. –û–±–µ—Ä—ñ—Ç—å –µ–Ω–µ—Ä–≥–æ—Å–∏—Å—Ç–µ–º—É, –µ—Ç–∞–ø —ñ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–∫–æ–ª—ñ–Ω—å, –ø–æ—Ç—ñ–º –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å ¬´–ó–∞–ø—É—Å—Ç–∏—Ç–∏¬ª.",
    "info"
)
set_running(root, False)                                                # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω "–ì–æ—Ç–æ–≤–æ" (–∫–Ω–æ–ø–∫–∏ –∞–∫—Ç–∏–≤–Ω—ñ)

root.mainloop()                                                         # –ó–∞–ø—É—Å–∫–∞—î–º–æ –≥–æ–ª–æ–≤–Ω–∏–π —Ü–∏–∫–ª Tkinter (–æ–±—Ä–æ–±–∫–∞ –ø–æ–¥—ñ–π, –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è GUI)
